[package]
name = "pingap"
version = "0.9.10"
authors = ["Tree Xie <tree.xie@outlook.com>"]
edition = "2021"
categories = ["network-programming", "web-programming::http-server"]
keywords = ["proxy", "http", "gateway"]
description = "A reverse proxy like nginx"
license = "Apache-2.0"
homepage = "https://github.com/vicanso/pingap"
repository = "https://github.com/vicanso/pingap"
exclude = ["asset/*", "test/*", "Cargo.lock", "web/*", ".github/*", "docs/*"]
readme = "./README.md"
rust-version = "1.74"
default-run = "pingap"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ahash = { version = "0.8.11", default-features = false }
arc-swap = "1.7.1"
async-trait = "0.1.86"
base64 = "0.22.1"
bstr = "1.11.3"
bytes = "1.9.0"
bytesize = { version = "1.3.0", features = ["serde"] }
cfg-if = "1.0.0"
chrono = { version = "0.4.39", default-features = false, features = [
    "std",
    "clock",
] }
clap = { version = "4.5.28", features = [
    "derive",
    "std",
    "help",
    "usage",
], default-features = false }
cookie = "0.18.1"
crc32fast = "1.4.2"
crossbeam-channel = "0.5.14"
fancy-regex = "0.14.0"
flate2 = "1.0.35"
glob = "0.3.2"
hex = "0.4.3"
hmac-sha256 = "1.1.8"
hmac-sha512 = { version = "1.1.6", default-features = false }
http = "1.2.0"
humantime = "2.1.0"
humantime-serde = "1.1.1"
itoa = "1.0.14"
mime_guess = "2.0.5"
nanoid = "0.4.0"
nix = { version = "0.29.0", features = ["signal"] }
num_cpus = "1.16.0"
once_cell = "1.20.2"
opentelemetry = { version = "0.27.1", default-features = false, features = [
    "trace",
], optional = true }
opentelemetry-http = { version = "0.27.0", default-features = false, optional = true }
pingora = { git = "https://github.com/cloudflare/pingora", rev = "e6b823c5d89860bb97713fdf14f197f799aed6af", default-features = false, features = [
    # pingora = { version = "0.4.0", default-features = false, features = [
    "lb",
    "openssl",
    "cache",
] }
pingora-limits = "0.4.0"
regex = { version = "1.11.1", default-features = false }
rust-embed = { version = "8.5.0", features = [
    "mime-guess",
    "compression",
], default-features = false }
scopeguard = "1.2.0"
serde = "1.0.217"
serde_json = "1.0.138"
sha2 = { version = "0.10.8", default-features = false }
smallvec = "1.13.2"
snafu = { version = "0.8.5", features = ["std"], default-features = false }
substring = "1.4.5"
tokio = { version = "1.43.0", default-features = false, features = ["fs"] }
toml = "0.8.19"
tracing = "0.1.41"
url = "2.5.4"
urlencoding = "2.1.3"
uuid = { version = "1.12.1", features = [
    "v7",
    "std",
    "fast-rng",
], default-features = false }
pingap-util = { path = "pingap-util" }
pingap-limit = { path = "pingap-limit" }
pingap-webhook = { path = "pingap-webhook" }
pingap-service = { path = "pingap-service" }
pingap-config = { path = "pingap-config" }
pingap-cache = { path = "pingap-cache" }
pingap-upstream = { path = "pingap-upstream" }
pingap-certificate = { path = "pingap-certificate" }
pingap-http-extra = { path = "pingap-http-extra" }
pingap-location = { path = "pingap-location" }
pingap-state = { path = "pingap-state" }
pingap-performance = { path = "pingap-performance" }
pingap-logger = { path = "pingap-logger" }
pingap-acme = { path = "pingap-acme" }
pingap-plugin = { path = "pingap-plugin" }
pingap-otel = { path = "pingap-otel", optional = true }
pingap-sentry = { path = "pingap-sentry", optional = true }
pingap-pyroscope = { path = "pingap-pyroscope", optional = true }


[features]
pyro = ["pingap-pyroscope"]
full = [
    "opentelemetry",
    "opentelemetry-http",
    "pingora/sentry",
    "pingap-cache/full",
    "pingap-state/full",
    "pingap-performance/full",
    "pingap-otel",
    "pingap-sentry",
]
perf = ["pyro", "full"]
default = []


[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }
pretty_assertions = "1.4.0"
tokio-test = "0.4.4"

[profile.release]
codegen-units = 1
lto = true
strip = "debuginfo"

[profile.release-perf]
inherits = "release"
debug = 1
strip = "none"


[[bench]]
name = "bench"
harness = false

[package.metadata.cargo-machete]
ignored = ["humantime-serde"]

[workspace]
members = [
    "pingap-discovery",
    "pingap-limit",
    "pingap-util",
    "pingap-webhook",
    "pingap-discovery",
    "pingap-health",
    "pingap-service",
    "pingap-config",
    "pingap-cache",
    "pingap-upstream",
    "pingap-certificate",
    "pingap-http-extra",
    "pingap-location",
    "pingap-state",
    "pingap-performance",
    "pingap-logger",
    "pingap-otel",
    "pingap-sentry",
    "pingap-pyroscope",
    "pingap-acme",
    "pingap-plugin",
]

[workspace.dependencies]
once_cell = "1.20.2"
bytes = "1.9.0"
http = "1.2.0"
pingora = { git = "https://github.com/cloudflare/pingora", rev = "e6b823c5d89860bb97713fdf14f197f799aed6af", default-features = false, features = [
    # pingora = { version = "0.4.0", default-features = false, features = [
    "lb",
    "openssl",
    "cache",
] }
regex = { version = "1.11.1", default-features = false }
snafu = { version = "0.8.5", features = ["std"], default-features = false }
substring = "1.4.5"
itoa = "1.0.14"
toml = "0.8.19"
tokio = { version = "1.43.0", default-features = false, features = ["fs"] }
TinyUFO = "0.4.0"
tracing = "0.1.41"
async-trait = "0.1.86"
serde = "1.0.217"
serde_json = "1.0.138"
strum = { version = "0.26.3", features = ["derive"] }
reqwest = { version = "0.12.12", default-features = false, features = [
    "json",
    "default-tls",
] }
hostname = "0.4.0"
futures = "0.3.31"
humantime = "2.1.0"
url = "2.5.4"
arc-swap = "1.7.1"
bytesize = { version = "1.3.0", features = ["serde"] }
futures-util = "0.3.31"
base64 = "0.22.1"
humantime-serde = "1.1.1"
memory-stats = { version = "1.2.0", features = ["always_use_statm"] }
scopeguard = "1.2.0"
walkdir = "2.5.0"
ahash = { version = "0.8.11", default-features = false }
derive_more = { version = "1.0.0", default-features = false, features = [
    "debug",
] }
pingora-runtime = "0.4.0"
x509-parser = "0.17.0"
rcgen = { version = "0.13.2", features = ["pem", "x509-parser"] }
time = { version = "0.3.37", features = ["local-offset"] }
pingora-limits = "0.4.0"
sysinfo = { version = "0.33.1", features = [
    "system",
], default-features = false }
num_cpus = "1.16.0"
cfg-if = "1.0.0"
chrono = { version = "0.4.39", default-features = false, features = [
    "std",
    "clock",
] }
flate2 = "1.0.35"
crc32fast = "1.4.2"
